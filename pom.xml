<project xmlns="http://maven.apache.org/POM/4.0.0"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
			http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.wolf359apps.ecommerce</groupId>
	<artifactId>ecommerce-parent</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>

	<properties>
		<java.version>21</java.version>
		<spring-boot.version>3.4.4</spring-boot.version>
		<spring-cloud.version>2024.0.1</spring-cloud.version>
		<maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
		<jib-maven-plugin.version>3.4.5</jib-maven-plugin.version>
		<org.mapstruct.version>1.6.3</org.mapstruct.version>
		<openapi-generator-maven-plugin.version>7.13.0</openapi-generator-maven-plugin.version>
		<lombok.version>1.18.38</lombok.version>
		<postgresql.version>42.7.5</postgresql.version>
	</properties>

	<dependencyManagement>

		<dependencies>

			<!-- Spring Boot BOM -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<!-- Spring Cloud BOM -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<!-- POSTGRESQL -->
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
				<scope>runtime</scope>
			</dependency>

		</dependencies>

	</dependencyManagement>

	<dependencies>

		<!-- Spring Boot Starter Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- JUnit Juniper -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- H2 DATABASE -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- MAPSTRUCT -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		
		<!-- LOMBOK -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
	
		<pluginManagement>

			<plugins>
				<plugin>
					<groupId>org.openapitools</groupId>
					<artifactId>openapi-generator-maven-plugin</artifactId>
					<version>${openapi-generator-maven-plugin.version}</version>
					<configuration>
						<output>${project.build.directory}/generated-sources</output>
						<generatorName>java</generatorName>
						<generateApis>false</generateApis>
						<generateModels>true</generateModels>
						<generateApiTests>false</generateApiTests>
						<generateApiDocumentation>false</generateApiDocumentation>
						<generateModelDocumentation>false</generateModelDocumentation>
						<generateModelTests>false</generateModelTests>
						<generateSupportingFiles>false</generateSupportingFiles>
						<modelNameSuffix>DTO</modelNameSuffix>
						<configOptions>
							<library>native</library>
							<enumPropertyNaming>MACRO_CASE</enumPropertyNaming>
							<serializationLibrary>jackson</serializationLibrary>
							<sourceFolder>generated</sourceFolder>
							<useJakartaEe>true</useJakartaEe>
							<supportUrlQuery>false</supportUrlQuery>
							<useBeanValidation>false</useBeanValidation>
						</configOptions>
					</configuration>
				</plugin>

			</plugins>

		</pluginManagement>
	
		<plugins>

			<!-- SPRING BOOT MAVEN -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
			</plugin>

			<!-- MAVEN COMPILER -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<release>${java.version}</release>
						<compilerArgs>
						<arg>-parameters</arg>
					</compilerArgs>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<!-- JIB MAVEN -->
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>${jib-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<to>
						<!--
							'registry' running inside Docker
							(registry.ecommerce.local is a Windows hosts file entry pointing to WSL IP address)
						 -->
						<image>registry.ecommerce.local:5000/${project.artifactId}:${project.version}</image>
					</to>
					<allowInsecureRegistries>true</allowInsecureRegistries>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>